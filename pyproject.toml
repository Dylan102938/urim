[build-system]
requires = ["hatchling>=1.21"]
build-backend = "hatchling.build"

[project]
name = "urim"
version = "0.1.0"
description = "CLI utilities for LLM research: quick dataset creation, evaluations, chat, and inference."
readme = "README.md"
requires-python = ">=3.10"
authors = [{ name = "urim contributors" }]
license = { text = "MIT" }
keywords = ["llm", "nlp", "cli", "research", "evaluation", "dataset"]
classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "License :: OSI Approved :: MIT License",
  "Environment :: Console",
]
# Minimal runtime deps; expand as features land
dependencies = [
  "openai>=1.40",
  "backoff>=2.2.1",
  "pandas>=2.0",
  "datasets>=2.19",
  "python-dotenv>=1.1.1",
  "orjson>=3.11.2",
]

[project.scripts]
urim = "urim.app:app"

[tool.hatch.build.targets.wheel]
packages = ["src/urim"]

[dependency-groups]
dev = [
  "pytest>=8.2",
  "ruff>=0.5",
  "mypy>=1.10",
  "types-requests",
]

[tool.pytest.ini_options]
addopts = "-q"
testpaths = ["tests"]
markers = [
  "requires_llm: mark test as requiring LLM network or prompts",
]

[tool.ruff]
line-length = 100
src = ["src", "tests"]

[tool.ruff.lint]
select = ["E", "F", "B", "I", "UP"]
ignore = ["B008"]

[tool.ruff.lint.per-file-ignores]
"src/urim/ai/prompts.py" = ["E501"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "lf"
docstring-code-format = true

[tool.mypy]
python_version = "3.12"
mypy_path = ["src"]
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
disallow_untyped_defs = true
no_implicit_optional = true
check_untyped_defs = true
show_error_codes = true
pretty = true
explicit_package_bases = true
files = ["src", "tests"]
ignore_missing_imports = true
